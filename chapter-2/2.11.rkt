#lang planet neil/sicp
(define (make-interval a b)
      (cons a b))

(define (upper-bound x)
  (let ((a (car x))
        (b (cdr x)))
    (if (> a b)
        a
        b)))

(define (lower-bound x)
  (let ((a (car x))
        (b (cdr x)))
    (if (< a b)
        a
        b)))

(define (add-interval x y)
  (make-interval (+ (lower-bound x) (lower-bound y))
                 (+ (upper-bound x) (upper-bound y))))

(define (sub-interval x y)
  (add-interval x
                (make-interval (- (upper-bound y))
                               (- (lower-bound y)))))

(define (mul-interval x y); x[a,b],y[c,d]
  (define (stat-one x)
    (and (< (lower-bound x) 0) (< (upper-bound x) 0)))
  (define (stat-two x)
    (and (< (lower-bound x) 0) (> (upper-bound x) 0)))
  (define (stat-three x)
    (and (> (lower-bound x) 0) (> (upper-bound x) 0)))
  (let ((a (lower-bound x))
        (b (upper-bound x))
        (c (lower-bound y))
        (d (upper-bound y)))
    (cond ((and (stat-one x) (stat-one y))
         (make-interval (* b d) (* a c)))
        ((and (stat-one x) (stat-two y))
         (make-interval (* a d) (* a c)))
        ((and (stat-one x) (stat-three y))
         (make-interval (* a d) (* b c)))
        ((and (stat-two x) (stat-one y))
         (make-interval (* b c) (* a c)))
        ((and (stat-two x) (stat-two y))
         (make-interval (min (* b c) (* a d)) (max (* a c) (* b d))))
        ((and (stat-two x) (stat-three y))
         (make-interval (* a d) (* b c)))
        ((and (stat-three x) (stat-one y))
         (make-interval (* b c) (* a d)))
        ((and (stat-three x) (stat-two y))
         (make-interval (* b c) (* b d)))
        ((and (stat-three x) (stat-three y))
         (make-interval (* a c) (* b d))))))
(define (div-interval x y)
  (define (cross-zero in)
    (< (* (lower-bound in) (upper-bound in)) 0))
  (if (cross-zero y)
      (display "div zero error")
      (mul-interval x
                (make-interval (/ 1.0 (upper-bound y))
                               (/ 1.0 (lower-bound y))))))


(mul-interval (make-interval -4 -9) (make-interval -3 -5))
(mul-interval (make-interval -4 -9) (make-interval -3 5))
(mul-interval (make-interval -4 -9) (make-interval 3 5))
(mul-interval (make-interval -4 9) (make-interval -3 -5))
(mul-interval (make-interval -4 9) (make-interval -3 5))
(mul-interval (make-interval -4 9) (make-interval 3 5))
(mul-interval (make-interval 4 9) (make-interval -3 -5))
(mul-interval (make-interval 4 9) (make-interval -3 5))
(mul-interval (make-interval 4 9) (make-interval 3 5))