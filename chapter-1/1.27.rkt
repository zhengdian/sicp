#lang planet neil/sicp
(define (fast-prime? n times)
  (define (fermat-test n)
    (define (try-it a)
      (define (expmod base exp m)
        (define (square x)
          (* x x))
        (cond ((= exp 0) 1)
              ((even? exp)
               (remainder (square (expmod base (/ exp 2) m)) m))
              (else
               (remainder (* base (expmod base (- exp 1) m)) m))))
      (= (expmod a n n) a))
    (try-it (+ 1 (random (- n 1)))))
  (cond ((= times 0) true)
        ((fermat-test n) (fast-prime? n (- times 1)))
        (else false)))

(fast-prime? 561 4)
(fast-prime? 1105 4)
(fast-prime? 1729 4)
(fast-prime? 2465 4)
(fast-prime? 2821 4)
(fast-prime? 6601 4)